"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/selecto";
exports.ids = ["vendor-chunks/selecto"];
exports.modules = {

/***/ "(ssr)/./node_modules/selecto/dist/selecto.esm.js":
/*!**************************************************!*\
  !*** ./node_modules/selecto/dist/selecto.esm.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CLASS_NAME: () => (/* binding */ CLASS_NAME),\n/* harmony export */   EVENTS: () => (/* binding */ EVENTS),\n/* harmony export */   METHODS: () => (/* binding */ METHODS),\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   OPTION_TYPES: () => (/* binding */ OPTION_TYPES),\n/* harmony export */   PROPERTIES: () => (/* binding */ PROPERTIES),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _scena_event_emitter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @scena/event-emitter */ \"(ssr)/./node_modules/@scena/event-emitter/dist/event-emitter.esm.js\");\n/* harmony import */ var gesto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gesto */ \"(ssr)/./node_modules/gesto/dist/gesto.esm.js\");\n/* harmony import */ var framework_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! framework-utils */ \"(ssr)/./node_modules/framework-utils/dist/utils.esm.js\");\n/* harmony import */ var _daybrush_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @daybrush/utils */ \"(ssr)/./node_modules/@daybrush/utils/dist/utils.esm.js\");\n/* harmony import */ var _egjs_children_differ__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @egjs/children-differ */ \"(ssr)/./node_modules/@egjs/children-differ/dist/children-differ.esm.js\");\n/* harmony import */ var _scena_dragscroll__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @scena/dragscroll */ \"(ssr)/./node_modules/@scena/dragscroll/dist/dragscroll.esm.js\");\n/* harmony import */ var keycon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! keycon */ \"(ssr)/./node_modules/keycon/dist/keycon.esm.js\");\n/* harmony import */ var overlap_area__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! overlap-area */ \"(ssr)/./node_modules/overlap-area/dist/overlap-area.esm.js\");\n/* harmony import */ var css_to_mat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! css-to-mat */ \"(ssr)/./node_modules/css-to-mat/dist/css-to-mat.esm.js\");\n/* harmony import */ var css_styled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! css-styled */ \"(ssr)/./node_modules/css-styled/dist/styled.esm.js\");\n/*\nCopyright (c) 2020 Daybrush\nname: selecto\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/selecto.git\nversion: 1.26.3\n*/\n\n\n\n\n\n\n\n\n\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nfunction getClient(e) {\n  if (\"touches\" in e) {\n    var touch = e.touches[0] || e.changedTouches[0];\n    return {\n      clientX: touch.clientX,\n      clientY: touch.clientY\n    };\n  } else {\n    return {\n      clientX: e.clientX,\n      clientY: e.clientY\n    };\n  }\n}\nfunction filterDuplicated(arr) {\n  if (typeof Map === \"undefined\") {\n    return arr.filter(function (value, index) {\n      return arr.indexOf(value) === index;\n    });\n  }\n\n  var map = new Map();\n  return arr.filter(function (value) {\n    if (map.has(value)) {\n      return false;\n    }\n\n    map.set(value, true);\n    return true;\n  });\n}\nfunction elementFromPoint(baseNode, clientX, clientY) {\n  var doc = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getDocument)(baseNode);\n  return doc.elementFromPoint && doc.elementFromPoint(clientX, clientY) || null;\n}\nfunction createElement(jsx, prevTarget, container) {\n  var tag = jsx.tag,\n      children = jsx.children,\n      attributes = jsx.attributes,\n      className = jsx.className,\n      style = jsx.style;\n  var el = prevTarget || (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getDocument)(container).createElement(tag);\n\n  for (var name in attributes) {\n    el.setAttribute(name, attributes[name]);\n  }\n\n  var elChildren = el.children;\n  children.forEach(function (child, i) {\n    createElement(child, elChildren[i], el);\n  });\n\n  if (className) {\n    className.split(/\\s+/g).forEach(function (name) {\n      if (name && !(0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.hasClass)(el, name)) {\n        (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.addClass)(el, name);\n      }\n    });\n  }\n\n  if (style) {\n    var elStyle = el.style;\n\n    for (var name in style) {\n      elStyle[name] = style[name];\n    }\n  }\n\n  if (!prevTarget && container) {\n    container.appendChild(el);\n  }\n\n  return el;\n}\nfunction h(tag, attrs) {\n  var children = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    children[_i - 2] = arguments[_i];\n  }\n\n  var _a = attrs || {},\n      _b = _a.className,\n      className = _b === void 0 ? \"\" : _b,\n      _c = _a.style,\n      style = _c === void 0 ? {} : _c,\n      attributes = __rest(_a, [\"className\", \"style\"]);\n\n  return {\n    tag: tag,\n    className: className,\n    style: style,\n    attributes: attributes,\n    children: children\n  };\n}\nfunction diffValue(prev, cur, func) {\n  if (prev !== cur) {\n    func(prev, cur);\n  }\n}\nfunction getRect(e, ratio, boundArea) {\n  var _a;\n\n  if (boundArea === void 0) {\n    boundArea = e.data.boundArea;\n  }\n\n  var _b = e.distX,\n      distX = _b === void 0 ? 0 : _b,\n      _c = e.distY,\n      distY = _c === void 0 ? 0 : _c;\n  var _d = e.data,\n      startX = _d.startX,\n      startY = _d.startY;\n\n  if (ratio > 0) {\n    var nextHeight = Math.sqrt((distX * distX + distY * distY) / (1 + ratio * ratio));\n    var nextWidth = ratio * nextHeight;\n    distX = (distX >= 0 ? 1 : -1) * nextWidth;\n    distY = (distY >= 0 ? 1 : -1) * nextHeight;\n  }\n\n  var width = Math.abs(distX);\n  var height = Math.abs(distY);\n  var maxWidth = distX < 0 ? startX - boundArea.left : boundArea.right - startX;\n  var maxHeight = distY < 0 ? startY - boundArea.top : boundArea.bottom - startY;\n  _a = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.calculateBoundSize)([width, height], [0, 0], [maxWidth, maxHeight], !!ratio), width = _a[0], height = _a[1];\n  distX = (distX >= 0 ? 1 : -1) * width;\n  distY = (distY >= 0 ? 1 : -1) * height;\n  var tx = Math.min(0, distX);\n  var ty = Math.min(0, distY);\n  var left = startX + tx;\n  var top = startY + ty;\n  return {\n    left: left,\n    top: top,\n    right: left + width,\n    bottom: top + height,\n    width: width,\n    height: height\n  };\n}\nfunction getDefaultElementRect(el) {\n  var rect = el.getBoundingClientRect();\n  var left = rect.left,\n      top = rect.top,\n      width = rect.width,\n      height = rect.height;\n  return {\n    pos1: [left, top],\n    pos2: [left + width, top],\n    pos3: [left, top + height],\n    pos4: [left + width, top + height]\n  };\n}\nfunction passTargets(beforeTargets, afterTargets, continueSelectWithoutDeselect) {\n  var _a = (0,_egjs_children_differ__WEBPACK_IMPORTED_MODULE_1__.diff)(beforeTargets, afterTargets),\n      list = _a.list,\n      prevList = _a.prevList,\n      added = _a.added,\n      removed = _a.removed,\n      maintained = _a.maintained;\n\n  return __spreadArray(__spreadArray(__spreadArray([], added.map(function (index) {\n    return list[index];\n  }), true), removed.map(function (index) {\n    return prevList[index];\n  }), true), continueSelectWithoutDeselect ? maintained.map(function (_a) {\n    var nextIndex = _a[1];\n    return list[nextIndex];\n  }) : [], true);\n}\nfunction getLineSize(points) {\n  var size = 0;\n  var length = points.length;\n\n  for (var i = 1; i < length; ++i) {\n    size = Math.max((0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getDist)(points[i], points[i - 1]), size);\n  }\n\n  return size;\n}\n\nvar injector = (0,css_styled__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\\n:host {\\n    position: fixed;\\n    display: none;\\n    border: 1px solid #4af;\\n    background: rgba(68, 170, 255, 0.5);\\n    pointer-events: none;\\n    will-change: transform;\\n    z-index: 100;\\n}\\n\");\n/**\n * @memberof Selecto\n */\n\nvar CLASS_NAME = \"selecto-selection \".concat(injector.className);\nvar PROPERTIES = [\"className\", \"boundContainer\", \"selectableTargets\", \"selectByClick\", \"selectFromInside\", \"continueSelect\", \"continueSelectWithoutDeselect\", \"toggleContinueSelect\", \"toggleContinueSelectWithoutDeselect\", \"keyContainer\", \"hitRate\", \"scrollOptions\", \"checkInput\", \"preventDefault\", \"ratio\", \"getElementRect\", \"preventDragFromInside\", \"rootContainer\", \"dragCondition\", \"clickBySelectEnd\", \"checkOverflow\", \"innerScrollOptions\"];\n/**\n * @memberof Selecto\n */\n\nvar OPTIONS = __spreadArray([// ignore target, container,\n\"dragContainer\", \"cspNonce\", \"preventClickEventOnDrag\", \"preventClickEventOnDragStart\", \"preventRightClick\"], PROPERTIES, true);\nvar OPTION_TYPES = {\n  className: String,\n  boundContainer: null,\n  portalContainer: null,\n  container: null,\n  dragContainer: null,\n  selectableTargets: Array,\n  selectByClick: Boolean,\n  selectFromInside: Boolean,\n  continueSelect: Boolean,\n  toggleContinueSelect: Array,\n  toggleContinueSelectWithoutDeselect: Array,\n  keyContainer: null,\n  hitRate: Number,\n  scrollOptions: Object,\n  checkInput: Boolean,\n  preventDefault: Boolean,\n  cspNonce: String,\n  ratio: Number,\n  getElementRect: Function,\n  preventDragFromInside: Boolean,\n  rootContainer: Object,\n  dragCondition: Function,\n  clickBySelectEnd: Boolean,\n  continueSelectWithoutDeselect: Boolean,\n  preventClickEventOnDragStart: Boolean,\n  preventClickEventOnDrag: Boolean,\n  checkOverflow: Boolean,\n  innerScrollOptions: Object\n};\n/**\n * @memberof Selecto\n */\n\nvar EVENTS = [\"dragStart\", \"drag\", \"dragEnd\", \"selectStart\", \"select\", \"selectEnd\", \"keydown\", \"keyup\", \"scroll\", \"innerScroll\"];\n/**\n * @memberof Selecto\n */\n\nvar METHODS = [\"clickTarget\", \"getSelectableElements\", \"setSelectedTargets\", \"getElementPoints\", \"getSelectedTargets\", \"findSelectableTargets\", \"triggerDragStart\", \"checkScroll\", \"selectTargetsByPoints\", \"setSelectedTargetsByPoints\"];\n\n/**\n * Selecto.js is a component that allows you to select elements in the drag area using the mouse or touch.\n * @sort 1\n * @extends EventEmitter\n */\n\nvar Selecto =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(Selecto, _super);\n  /**\n   *\n   */\n\n\n  function Selecto(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.selectedTargets = [];\n    _this.dragScroll = new _scena_dragscroll__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n\n    _this._onDragStart = function (e, clickedTarget) {\n      var data = e.data,\n          clientX = e.clientX,\n          clientY = e.clientY,\n          inputEvent = e.inputEvent;\n      var _a = _this.options,\n          selectFromInside = _a.selectFromInside,\n          selectByClick = _a.selectByClick,\n          rootContainer = _a.rootContainer,\n          boundContainer = _a.boundContainer,\n          _b = _a.preventDragFromInside,\n          preventDragFromInside = _b === void 0 ? true : _b,\n          clickBySelectEnd = _a.clickBySelectEnd,\n          dragCondition = _a.dragCondition;\n\n      if (dragCondition && !dragCondition(e)) {\n        e.stop();\n        return;\n      }\n\n      data.data = {};\n      var win = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getWindow)(_this.container);\n      data.innerWidth = win.innerWidth;\n      data.innerHeight = win.innerHeight;\n\n      _this.findSelectableTargets(data);\n\n      data.startSelectedTargets = _this.selectedTargets;\n      data.scaleMatrix = (0,css_to_mat__WEBPACK_IMPORTED_MODULE_4__.createMatrix)();\n      data.containerX = 0;\n      data.containerY = 0;\n      var container = _this.container;\n      var boundArea = {\n        left: -Infinity,\n        top: -Infinity,\n        right: Infinity,\n        bottom: Infinity\n      };\n\n      if (rootContainer) {\n        var containerRect = _this.container.getBoundingClientRect();\n\n        data.containerX = containerRect.left;\n        data.containerY = containerRect.top;\n        data.scaleMatrix = (0,css_to_mat__WEBPACK_IMPORTED_MODULE_4__.getDistElementMatrix)(_this.container, rootContainer);\n      }\n\n      if (boundContainer) {\n        var boundInfo = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(boundContainer) && \"element\" in boundContainer ? __assign({\n          left: true,\n          top: true,\n          bottom: true,\n          right: true\n        }, boundContainer) : {\n          element: boundContainer,\n          left: true,\n          top: true,\n          bottom: true,\n          right: true\n        };\n        var boundElement = boundInfo.element;\n        var rectElement = void 0;\n\n        if (boundElement) {\n          if ((0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(boundElement)) {\n            rectElement = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getDocument)(container).querySelector(boundElement);\n          } else if (boundElement === true) {\n            rectElement = _this.container;\n          } else {\n            rectElement = boundElement;\n          }\n\n          var rect = rectElement.getBoundingClientRect();\n\n          if (boundInfo.left) {\n            boundArea.left = rect.left;\n          }\n\n          if (boundInfo.top) {\n            boundArea.top = rect.top;\n          }\n\n          if (boundInfo.right) {\n            boundArea.right = rect.right;\n          }\n\n          if (boundInfo.bottom) {\n            boundArea.bottom = rect.bottom;\n          }\n        }\n      }\n\n      data.boundArea = boundArea;\n      var hitRect = {\n        left: clientX,\n        top: clientY,\n        right: clientX,\n        bottom: clientY,\n        width: 0,\n        height: 0\n      };\n      var firstPassedTargets = []; // allow click on select\n\n      var allowClickBySelectEnd = selectByClick && !clickBySelectEnd;\n      var hasInsideTargets = false;\n\n      if (!selectFromInside || allowClickBySelectEnd) {\n        var pointTarget = _this._findElement(clickedTarget || inputEvent.target, // elementFromPoint(clientX, clientY),\n        data.selectableTargets);\n\n        hasInsideTargets = !!pointTarget;\n\n        if (allowClickBySelectEnd) {\n          firstPassedTargets = pointTarget ? [pointTarget] : [];\n        }\n      }\n\n      var isPreventSelect = !selectFromInside && hasInsideTargets; // prevent drag from inside when selectByClick is false\n\n      if (isPreventSelect && !selectByClick) {\n        e.stop();\n        return false;\n      }\n\n      var type = inputEvent.type;\n      var isTrusted = type === \"mousedown\" || type === \"touchstart\";\n      /**\n       * When the drag starts (triggers on mousedown or touchstart), the dragStart event is called.\n       * Call the stop () function if you have a specific element or don't want to raise a select\n       * @memberof Selecto\n       * @event dragStart\n       * @param {OnDragStart} - Parameters for the dragStart event\n       * @example\n       * import Selecto from \"selecto\";\n       *\n       * const selecto = new Selecto({\n       *   container: document.body,\n       *   selectByClick: true,\n       *   selectFromInside: false,\n       * });\n       *\n       * selecto.on(\"dragStart\", e => {\n       *   if (e.inputEvent.target.tagName === \"SPAN\") {\n       *     e.stop();\n       *   }\n       * }).on(\"select\", e => {\n       *   e.added.forEach(el => {\n       *     el.classList.add(\"selected\");\n       *   });\n       *   e.removed.forEach(el => {\n       *     el.classList.remove(\"selected\");\n       *   });\n       * });\n       */\n\n      var result = !e.isClick && isTrusted ? _this.emit(\"dragStart\", __assign(__assign({}, e), {\n        data: data.data\n      })) : true;\n\n      if (!result) {\n        e.stop();\n        return false;\n      }\n\n      if (_this.continueSelect) {\n        firstPassedTargets = passTargets(_this.selectedTargets, firstPassedTargets, _this.continueSelectWithoutDeselect);\n        data.startPassedTargets = _this.selectedTargets;\n      } else {\n        data.startPassedTargets = [];\n      }\n\n      _this._select(firstPassedTargets, hitRect, e, true, isPreventSelect && selectByClick && !clickBySelectEnd && preventDragFromInside);\n\n      data.startX = clientX;\n      data.startY = clientY;\n      data.selectFlag = false;\n      data.preventDragFromInside = false;\n\n      if (inputEvent.target) {\n        var offsetPos = (0,css_to_mat__WEBPACK_IMPORTED_MODULE_4__.calculateMatrixDist)(data.scaleMatrix, [clientX - data.containerX, clientY - data.containerY]);\n        _this.target.style.cssText += \"position: \".concat(rootContainer ? \"absolute\" : \"fixed\", \";\") + \"left:0px;top:0px;\" + \"transform: translate(\".concat(offsetPos[0], \"px, \").concat(offsetPos[1], \"px)\");\n      }\n\n      if (isPreventSelect && selectByClick && !clickBySelectEnd) {\n        inputEvent.preventDefault(); // prevent drag from inside when selectByClick is true and force call `selectEnd`\n\n        if (preventDragFromInside) {\n          _this._selectEnd(data.startSelectedTargets, data.startPassedTargets, hitRect, e, true);\n\n          data.preventDragFromInside = true;\n        }\n      } else {\n        data.selectFlag = true; // why?\n        // if (type === \"touchstart\") {\n        //     inputEvent.preventDefault();\n        // }\n\n        var _c = _this.options,\n            scrollOptions = _c.scrollOptions,\n            innerScrollOptions = _c.innerScrollOptions;\n        var isInnerScroll = false;\n\n        if (innerScrollOptions) {\n          var inputEvent_1 = e.inputEvent;\n          var target = inputEvent_1.target;\n          var innerScrollElement = null;\n          var parentElement = target;\n\n          while (parentElement && parentElement !== (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getDocument)(container).body) {\n            var overflow = getComputedStyle(parentElement).overflow !== \"visible\";\n\n            if (overflow) {\n              innerScrollElement = parentElement;\n              break;\n            }\n\n            parentElement = parentElement.parentElement;\n          }\n\n          if (innerScrollElement) {\n            data.innerScrollOptions = __assign({\n              container: innerScrollElement,\n              checkScrollEvent: true\n            }, innerScrollOptions === true ? {} : innerScrollOptions);\n\n            _this.dragScroll.dragStart(e, data.innerScrollOptions);\n\n            isInnerScroll = true;\n          }\n        }\n\n        if (!isInnerScroll && scrollOptions && scrollOptions.container) {\n          _this.dragScroll.dragStart(e, scrollOptions);\n        }\n\n        if (isPreventSelect && selectByClick && clickBySelectEnd) {\n          data.selectFlag = false;\n          e.preventDrag();\n        }\n      }\n\n      return true;\n    };\n\n    _this._onDrag = function (e) {\n      if (e.data.selectFlag) {\n        var scrollOptions = _this.scrollOptions;\n        var innerScrollOptions = e.data.innerScrollOptions;\n        var hasScrollOptions = innerScrollOptions || (scrollOptions === null || scrollOptions === void 0 ? void 0 : scrollOptions.container); // If it is a scrolling position, pass drag\n\n        if (hasScrollOptions && !e.isScroll && _this.dragScroll.drag(e, innerScrollOptions || scrollOptions)) {\n          return;\n        }\n      }\n\n      _this._checkSelected(e);\n    };\n\n    _this._onDragEnd = function (e) {\n      var data = e.data,\n          inputEvent = e.inputEvent;\n      var rect = getRect(e, _this.options.ratio);\n      var selectFlag = data.selectFlag;\n      var container = _this.container;\n      /**\n       * When the drag ends (triggers on mouseup or touchend after drag), the dragEnd event is called.\n       * @memberof Selecto\n       * @event dragEnd\n       * @param {OnDragEnd} - Parameters for the dragEnd event\n       */\n\n      if (inputEvent) {\n        _this.emit(\"dragEnd\", __assign(__assign({\n          isDouble: !!e.isDouble,\n          isClick: !!e.isClick,\n          isDrag: false,\n          isSelect: selectFlag\n        }, e), {\n          data: data.data,\n          rect: rect\n        }));\n      }\n\n      _this.target.style.cssText += \"display: none;\";\n\n      if (selectFlag) {\n        data.selectFlag = false;\n\n        _this.dragScroll.dragEnd();\n      } else if (_this.selectByClick && _this.clickBySelectEnd) {\n        // only clickBySelectEnd\n        var pointTarget = _this._findElement((inputEvent === null || inputEvent === void 0 ? void 0 : inputEvent.target) || elementFromPoint(container, e.clientX, e.clientY), data.selectableTargets);\n\n        _this._select(pointTarget ? [pointTarget] : [], rect, e);\n      }\n\n      if (!data.preventDragFromInside) {\n        _this._selectEnd(data.startSelectedTargets, data.startPassedTargets, rect, e);\n      }\n    };\n\n    _this._onKeyDown = function (e) {\n      var options = _this.options;\n      var isKeyDown = false;\n\n      if (!_this._keydownContinueSelect) {\n        var result = _this._sameCombiKey(e, options.toggleContinueSelect);\n\n        _this._keydownContinueSelect = result;\n        isKeyDown || (isKeyDown = result);\n      }\n\n      if (!_this._keydownContinueSelectWithoutDeselection) {\n        var result = _this._sameCombiKey(e, options.toggleContinueSelectWithoutDeselect);\n\n        _this._keydownContinueSelectWithoutDeselection = result;\n        isKeyDown || (isKeyDown = result);\n      }\n\n      if (!isKeyDown) {\n        return;\n      }\n      /**\n       * When you keydown the key you specified in toggleContinueSelect, the keydown event is called.\n       * @memberof Selecto\n       * @event keydown\n       * @example\n       * import Selecto from \"selecto\";\n       *\n       * const selecto = new Selecto({\n       *   container: document.body,\n       *   toggleContinueSelect: \"shift\";\n       *   keyContainer: window,\n       * });\n       *\n       * selecto.on(\"keydown\", () => {\n       *   document.querySelector(\".button\").classList.add(\"selected\");\n       * }).on(\"keyup\", () => {\n       *   document.querySelector(\".button\").classList.remove(\"selected\");\n       * }).on(\"select\", e => {\n       *   e.added.forEach(el => {\n       *     el.classList.add(\"selected\");\n       *   });\n       *   e.removed.forEach(el => {\n       *     el.classList.remove(\"selected\");\n       *   });\n       * });\n       */\n\n\n      _this.emit(\"keydown\", {\n        keydownContinueSelect: _this._keydownContinueSelect,\n        keydownContinueSelectWithoutDeselection: _this._keydownContinueSelectWithoutDeselection\n      });\n    };\n\n    _this._onKeyUp = function (e) {\n      var options = _this.options;\n      var isKeyUp = false;\n\n      if (_this._keydownContinueSelect) {\n        var result = _this._sameCombiKey(e, options.toggleContinueSelect, true);\n\n        _this._keydownContinueSelect = !result;\n        isKeyUp || (isKeyUp = result);\n      }\n\n      if (_this._keydownContinueSelectWithoutDeselection) {\n        var result = _this._sameCombiKey(e, options.toggleContinueSelectWithoutDeselect, true);\n\n        _this._keydownContinueSelectWithoutDeselection = !result;\n        isKeyUp || (isKeyUp = result);\n      }\n\n      if (!isKeyUp) {\n        return;\n      }\n      /**\n       * When you keyup the key you specified in toggleContinueSelect, the keyup event is called.\n       * @memberof Selecto\n       * @event keyup\n       * @example\n       * import Selecto from \"selecto\";\n       *\n       * const selecto = new Selecto({\n       *   container: document.body,\n       *   toggleContinueSelect: \"shift\";\n       *   keyContainer: window,\n       * });\n       *\n       * selecto.on(\"keydown\", () => {\n       *   document.querySelector(\".button\").classList.add(\"selected\");\n       * }).on(\"keyup\", () => {\n       *   document.querySelector(\".button\").classList.remove(\"selected\");\n       * }).on(\"select\", e => {\n       *   e.added.forEach(el => {\n       *     el.classList.add(\"selected\");\n       *   });\n       *   e.removed.forEach(el => {\n       *     el.classList.remove(\"selected\");\n       *   });\n       * });\n       */\n\n\n      _this.emit(\"keyup\", {\n        keydownContinueSelect: _this._keydownContinueSelect,\n        keydownContinueSelectWithoutDeselection: _this._keydownContinueSelectWithoutDeselection\n      });\n    };\n\n    _this._onBlur = function () {\n      if (_this._keydownContinueSelect || _this._keydownContinueSelectWithoutDeselection) {\n        _this._keydownContinueSelect = false;\n        _this._keydownContinueSelectWithoutDeselection = false;\n\n        _this.emit(\"keyup\", {\n          keydownContinueSelect: _this._keydownContinueSelect,\n          keydownContinueSelectWithoutDeselection: _this._keydownContinueSelectWithoutDeselection\n        });\n      }\n    };\n\n    _this._onDocumentSelectStart = function (e) {\n      var doc = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getDocument)(_this.container);\n\n      if (!_this.gesto.isFlag()) {\n        return;\n      }\n\n      var dragContainer = _this.dragContainer;\n\n      if (dragContainer === (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getWindow)(_this.container)) {\n        dragContainer = doc.documentElement;\n      }\n\n      var containers = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.isNode)(dragContainer) ? [dragContainer] : [].slice.call(dragContainer);\n      var target = e.target;\n      containers.some(function (container) {\n        if (container === target || container.contains(target)) {\n          e.preventDefault();\n          return true;\n        }\n      });\n    };\n\n    _this.target = options.portalContainer;\n    var container = options.container;\n    _this.options = __assign({\n      className: \"\",\n      portalContainer: null,\n      container: null,\n      dragContainer: null,\n      selectableTargets: [],\n      selectByClick: true,\n      selectFromInside: true,\n      clickBySelectEnd: false,\n      hitRate: 100,\n      continueSelect: false,\n      continueSelectWithoutDeselect: false,\n      toggleContinueSelect: null,\n      toggleContinueSelectWithoutDeselect: null,\n      keyContainer: null,\n      scrollOptions: null,\n      checkInput: false,\n      preventDefault: false,\n      boundContainer: false,\n      preventDragFromInside: true,\n      dragCondition: null,\n      rootContainer: null,\n      checkOverflow: false,\n      innerScrollOptions: false,\n      getElementRect: getDefaultElementRect,\n      cspNonce: \"\",\n      ratio: 0\n    }, options);\n    var portalContainer = _this.options.portalContainer;\n\n    if (portalContainer) {\n      container = portalContainer.parentElement;\n    }\n\n    _this.container = container || document.body;\n\n    _this.initElement();\n\n    _this.initDragScroll();\n\n    _this.setKeyController();\n\n    return _this;\n  }\n  /**\n   * You can set the currently selected targets.\n   * selectByClick, continueSelect, and continueSelectWithoutDeselect are not applied.\n   */\n\n\n  var __proto = Selecto.prototype;\n\n  __proto.setSelectedTargets = function (selectedTargets) {\n    var beforeSelected = this.selectedTargets;\n\n    var _a = (0,_egjs_children_differ__WEBPACK_IMPORTED_MODULE_1__.diff)(beforeSelected, selectedTargets),\n        added = _a.added,\n        removed = _a.removed,\n        prevList = _a.prevList,\n        list = _a.list;\n\n    this.selectedTargets = selectedTargets;\n    return {\n      added: added.map(function (index) {\n        return list[index];\n      }),\n      removed: removed.map(function (index) {\n        return prevList[index];\n      }),\n      beforeSelected: beforeSelected,\n      selected: selectedTargets\n    };\n  };\n  /**\n   * You can set the currently selected targets by points\n   * selectByClick, continueSelect, and continueSelectWithoutDeselect are not applied.\n   */\n\n\n  __proto.setSelectedTargetsByPoints = function (point1, point2) {\n    var left = Math.min(point1[0], point2[0]);\n    var top = Math.min(point1[1], point2[1]);\n    var right = Math.max(point1[0], point2[0]);\n    var bottom = Math.max(point1[1], point2[1]);\n    var rect = {\n      left: left,\n      top: top,\n      right: right,\n      bottom: bottom,\n      width: right - left,\n      height: bottom - top\n    };\n    var data = {\n      ignoreClick: true\n    };\n    this.findSelectableTargets(data);\n    var selectedElements = this.hitTest(rect, data, true, null);\n    var result = this.setSelectedTargets(selectedElements);\n    return __assign(__assign({}, result), {\n      rect: rect\n    });\n  };\n  /**\n   * Select target by virtual drag from startPoint to endPoint.\n   * The target of inputEvent is null.\n   */\n\n\n  __proto.selectTargetsByPoints = function (startPoint, endPoint) {\n    var mousedown = new MouseEvent(\"mousedown\", {\n      clientX: startPoint[0],\n      clientY: startPoint[1],\n      cancelable: true,\n      bubbles: true\n    });\n    var mousemove = new MouseEvent(\"mousemove\", {\n      clientX: endPoint[0],\n      clientY: endPoint[1],\n      cancelable: true,\n      bubbles: true\n    });\n    var mouseup = new MouseEvent(\"mousemove\", {\n      clientX: endPoint[0],\n      clientY: endPoint[1],\n      cancelable: true,\n      bubbles: true\n    });\n    var gesto = this.gesto;\n    var result = gesto.onDragStart(mousedown);\n\n    if (result !== false) {\n      gesto.onDrag(mousemove);\n      gesto.onDragEnd(mouseup);\n    }\n  };\n  /**\n   * You can get the currently selected targets.\n   */\n\n\n  __proto.getSelectedTargets = function () {\n    return this.selectedTargets;\n  };\n  /**\n   * `OnDragStart` is triggered by an external event.\n   * @param - external event\n   * @example\n   * import Selecto from \"selecto\";\n   *\n   * const selecto = new Selecto();\n   *\n   * window.addEventListener(\"mousedown\", e => {\n   *   selecto.triggerDragStart(e);\n   * });\n   */\n\n\n  __proto.triggerDragStart = function (e) {\n    this.gesto.triggerDragStart(e);\n    return this;\n  };\n  /**\n   * Destroy elements, properties, and events.\n   */\n\n\n  __proto.destroy = function () {\n    var _a;\n\n    this.off();\n    this.keycon && this.keycon.destroy();\n    this.gesto.unset();\n    this.injectResult.destroy();\n    this.dragScroll.dragEnd();\n    (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.removeEvent)(document, \"selectstart\", this._onDocumentSelectStart);\n\n    if (!this.options.portalContainer) {\n      (_a = this.target.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.target);\n    }\n\n    this.keycon = null;\n    this.gesto = null;\n    this.injectResult = null;\n    this.target = null;\n    this.container = null;\n    this.options = null;\n  };\n\n  __proto.getElementPoints = function (target) {\n    var getElementRect = this.getElementRect || getDefaultElementRect;\n    var info = getElementRect(target);\n    var points = [info.pos1, info.pos2, info.pos4, info.pos3];\n\n    if (getElementRect !== getDefaultElementRect) {\n      var rect = target.getBoundingClientRect();\n      return (0,overlap_area__WEBPACK_IMPORTED_MODULE_5__.fitPoints)(points, rect);\n    }\n\n    return points;\n  };\n  /**\n   * Get all elements set in `selectableTargets`.\n   */\n\n\n  __proto.getSelectableElements = function () {\n    var container = this.container;\n    var selectableElements = [];\n    this.options.selectableTargets.forEach(function (target) {\n      if ((0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.isFunction)(target)) {\n        var result = target();\n\n        if (result) {\n          selectableElements.push.apply(selectableElements, [].slice.call(result));\n        }\n      } else if ((0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.isNode)(target)) {\n        selectableElements.push(target);\n      } else if ((0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(target)) {\n        selectableElements.push(target.value || target.current);\n      } else {\n        var elements = [].slice.call((0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getDocument)(container).querySelectorAll(target));\n        selectableElements.push.apply(selectableElements, elements);\n      }\n    });\n    return selectableElements;\n  };\n  /**\n   * If scroll occurs during dragging, you can manually call this method to check the position again.\n   */\n\n\n  __proto.checkScroll = function () {\n    if (!this.gesto.isFlag()) {\n      return;\n    }\n\n    var scrollOptions = this.scrollOptions;\n    var innerScrollOptions = this.gesto.getEventData().innerScrollOptions;\n    var hasScrollOptions = innerScrollOptions || (scrollOptions === null || scrollOptions === void 0 ? void 0 : scrollOptions.container); // If it is a scrolling position, pass drag\n\n    if (hasScrollOptions) {\n      this.dragScroll.checkScroll(__assign({\n        inputEvent: this.gesto.getCurrentEvent()\n      }, innerScrollOptions || scrollOptions));\n    }\n  };\n  /**\n   * Find for selectableTargets again during drag event\n   * You can update selectable targets during an event.\n   */\n\n\n  __proto.findSelectableTargets = function (data) {\n    var _this = this;\n\n    if (data === void 0) {\n      data = this.gesto.getEventData();\n    }\n\n    var selectableTargets = this.getSelectableElements();\n    var selectablePoints = selectableTargets.map(function (target) {\n      return _this.getElementPoints(target);\n    });\n    data.selectableTargets = selectableTargets;\n    data.selectablePoints = selectablePoints;\n    data.selectableParentMap = null;\n    var options = this.options;\n    var hasIndexesMap = options.checkOverflow || options.innerScrollOptions;\n    var doc = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getDocument)(this.container);\n\n    if (hasIndexesMap) {\n      var parentMap_1 = new Map();\n      data.selectableInnerScrollParentMap = parentMap_1;\n      data.selectableInnerScrollPathsList = selectableTargets.map(function (target, index) {\n        var parentElement = target.parentElement;\n        var parents = [];\n        var paths = [];\n\n        var _loop_1 = function () {\n          var info = parentMap_1.get(parentElement);\n\n          if (!info) {\n            var overflow = getComputedStyle(parentElement).overflow !== \"visible\";\n\n            if (overflow) {\n              var rect = getDefaultElementRect(parentElement);\n              info = {\n                parentElement: parentElement,\n                indexes: [],\n                points: [rect.pos1, rect.pos2, rect.pos4, rect.pos3],\n                paths: __spreadArray([], paths, true)\n              };\n              parents.push(parentElement);\n              parents.forEach(function (prevParentElement) {\n                parentMap_1.set(prevParentElement, info);\n              });\n              parents = [];\n            }\n          }\n\n          if (info) {\n            parentElement = info.parentElement;\n            parentMap_1.get(parentElement).indexes.push(index);\n            paths.push(parentElement);\n          } else {\n            parents.push(parentElement);\n          }\n\n          parentElement = parentElement.parentElement;\n        };\n\n        while (parentElement && parentElement !== doc.body) {\n          _loop_1();\n        }\n\n        return paths;\n      });\n    }\n\n    if (!options.checkOverflow) {\n      data.selectableInners = selectableTargets.map(function () {\n        return true;\n      });\n    }\n\n    this._refreshGroups(data);\n\n    return selectableTargets;\n  };\n  /**\n   * External click or mouse events can be applied to the selecto.\n   * @params - Extenal click or mouse event\n   * @params - Specify the clicked target directly.\n   */\n\n\n  __proto.clickTarget = function (e, clickedTarget) {\n    var _a = getClient(e),\n        clientX = _a.clientX,\n        clientY = _a.clientY;\n\n    var dragEvent = {\n      data: {\n        selectFlag: false\n      },\n      clientX: clientX,\n      clientY: clientY,\n      inputEvent: e,\n      isClick: true,\n      isTrusted: false,\n      stop: function () {\n        return false;\n      }\n    };\n\n    if (this._onDragStart(dragEvent, clickedTarget)) {\n      this._onDragEnd(dragEvent);\n    }\n\n    return this;\n  };\n\n  __proto.setKeyController = function () {\n    var _a = this.options,\n        keyContainer = _a.keyContainer,\n        toggleContinueSelect = _a.toggleContinueSelect,\n        toggleContinueSelectWithoutDeselect = _a.toggleContinueSelectWithoutDeselect;\n\n    if (this.keycon) {\n      this.keycon.destroy();\n      this.keycon = null;\n    }\n\n    if (toggleContinueSelect || toggleContinueSelectWithoutDeselect) {\n      this.keycon = new keycon__WEBPACK_IMPORTED_MODULE_6__[\"default\"](keyContainer || (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getWindow)(this.container));\n      this.keycon.keydown(this._onKeyDown).keyup(this._onKeyUp).on(\"blur\", this._onBlur);\n    }\n  };\n\n  __proto.setClassName = function (nextClassName) {\n    this.options.className = nextClassName;\n    this.target.setAttribute(\"class\", \"\".concat(CLASS_NAME, \" \").concat(nextClassName || \"\"));\n  };\n\n  __proto.setKeyEvent = function () {\n    var _a = this.options,\n        toggleContinueSelect = _a.toggleContinueSelect,\n        toggleContinueSelectWithoutDeselect = _a.toggleContinueSelectWithoutDeselect;\n\n    if (!toggleContinueSelect && !toggleContinueSelectWithoutDeselect || this.keycon) {\n      return;\n    }\n\n    this.setKeyController();\n  }; // with getter, setter property\n\n\n  __proto.setKeyContainer = function (keyContainer) {\n    var _this = this;\n\n    var options = this.options;\n    diffValue(options.keyContainer, keyContainer, function () {\n      options.keyContainer = keyContainer;\n\n      _this.setKeyController();\n    });\n  };\n\n  __proto.getContinueSelect = function () {\n    var _a = this.options,\n        continueSelect = _a.continueSelect,\n        toggleContinueSelect = _a.toggleContinueSelect;\n\n    if (!toggleContinueSelect || !this._keydownContinueSelect) {\n      return continueSelect;\n    }\n\n    return !continueSelect;\n  };\n\n  __proto.getContinueSelectWithoutDeselect = function () {\n    var _a = this.options,\n        continueSelectWithoutDeselect = _a.continueSelectWithoutDeselect,\n        toggleContinueSelectWithoutDeselect = _a.toggleContinueSelectWithoutDeselect;\n\n    if (!toggleContinueSelectWithoutDeselect || !this._keydownContinueSelectWithoutDeselection) {\n      return continueSelectWithoutDeselect;\n    }\n\n    return !continueSelectWithoutDeselect;\n  };\n\n  __proto.setToggleContinueSelect = function (toggleContinueSelect) {\n    var _this = this;\n\n    var options = this.options;\n    diffValue(options.toggleContinueSelect, toggleContinueSelect, function () {\n      options.toggleContinueSelect = toggleContinueSelect;\n\n      _this.setKeyEvent();\n    });\n  };\n\n  __proto.setToggleContinueSelectWithoutDeselect = function (toggleContinueSelectWithoutDeselect) {\n    var _this = this;\n\n    var options = this.options;\n    diffValue(options.toggleContinueSelectWithoutDeselect, toggleContinueSelectWithoutDeselect, function () {\n      options.toggleContinueSelectWithoutDeselect = toggleContinueSelectWithoutDeselect;\n\n      _this.setKeyEvent();\n    });\n  };\n\n  __proto.setPreventDefault = function (value) {\n    this.gesto.options.preventDefault = value;\n  };\n\n  __proto.setCheckInput = function (value) {\n    this.gesto.options.checkInput = value;\n  };\n\n  __proto.initElement = function () {\n    var _a = this.options,\n        dragContainer = _a.dragContainer,\n        checkInput = _a.checkInput,\n        preventDefault = _a.preventDefault,\n        preventClickEventOnDragStart = _a.preventClickEventOnDragStart,\n        preventClickEventOnDrag = _a.preventClickEventOnDrag,\n        preventClickEventByCondition = _a.preventClickEventByCondition,\n        _b = _a.preventRightClick,\n        preventRightClick = _b === void 0 ? true : _b,\n        className = _a.className;\n    var container = this.container;\n    this.target = createElement(h(\"div\", {\n      className: \"\".concat(CLASS_NAME, \" \").concat(className || \"\")\n    }), this.target, container);\n    var target = this.target;\n    this.dragContainer = typeof dragContainer === \"string\" ? [].slice.call((0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getDocument)(container).querySelectorAll(dragContainer)) : dragContainer || this.target.parentNode;\n    this.gesto = new gesto__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this.dragContainer, {\n      checkWindowBlur: true,\n      container: (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.getWindow)(container),\n      checkInput: checkInput,\n      preventDefault: preventDefault,\n      preventClickEventOnDragStart: preventClickEventOnDragStart,\n      preventClickEventOnDrag: preventClickEventOnDrag,\n      preventClickEventByCondition: preventClickEventByCondition,\n      preventRightClick: preventRightClick\n    }).on({\n      dragStart: this._onDragStart,\n      drag: this._onDrag,\n      dragEnd: this._onDragEnd\n    });\n    (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.addEvent)(document, \"selectstart\", this._onDocumentSelectStart);\n    this.injectResult = injector.inject(target, {\n      nonce: this.options.cspNonce\n    });\n  };\n\n  __proto.hitTest = function (selectRect, data, isDrag, gestoEvent) {\n    var _a = this.options,\n        hitRate = _a.hitRate,\n        selectByClick = _a.selectByClick;\n    var left = selectRect.left,\n        top = selectRect.top,\n        right = selectRect.right,\n        bottom = selectRect.bottom;\n    var innerGroups = data.innerGroups;\n    var innerWidth = data.innerWidth;\n    var innerHeight = data.innerHeight;\n    var clientX = gestoEvent === null || gestoEvent === void 0 ? void 0 : gestoEvent.clientX;\n    var clientY = gestoEvent === null || gestoEvent === void 0 ? void 0 : gestoEvent.clientY;\n    var ignoreClick = data.ignoreClick;\n    var rectPoints = [[left, top], [right, top], [right, bottom], [left, bottom]];\n\n    var isHit = function (points, el) {\n      var hitRateValue = typeof hitRate === \"function\" ? (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.splitUnit)(\"\".concat(hitRate(el))) : (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.splitUnit)(\"\".concat(hitRate));\n      var inArea = ignoreClick ? false : (0,overlap_area__WEBPACK_IMPORTED_MODULE_5__.isInside)([clientX, clientY], points);\n\n      if (!isDrag && selectByClick && inArea) {\n        return true;\n      }\n\n      var overlapPoints = (0,overlap_area__WEBPACK_IMPORTED_MODULE_5__.getOverlapPoints)(rectPoints, points);\n\n      if (!overlapPoints.length) {\n        return false;\n      }\n\n      var overlapSize = (0,overlap_area__WEBPACK_IMPORTED_MODULE_5__.getAreaSize)(overlapPoints); // Line\n\n      var targetSize = 0;\n\n      if (overlapSize === 0 && (0,overlap_area__WEBPACK_IMPORTED_MODULE_5__.getAreaSize)(points) === 0) {\n        targetSize = getLineSize(points);\n        overlapSize = getLineSize(overlapPoints);\n      } else {\n        targetSize = (0,overlap_area__WEBPACK_IMPORTED_MODULE_5__.getAreaSize)(points);\n      }\n\n      if (hitRateValue.unit === \"px\") {\n        return overlapSize >= hitRateValue.value;\n      } else {\n        var rate = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.between)(Math.round(overlapSize / targetSize * 100), 0, 100);\n        return rate >= Math.min(100, hitRateValue.value);\n      }\n    };\n\n    var selectableTargets = data.selectableTargets;\n    var selectablePoints = data.selectablePoints;\n    var selectableInners = data.selectableInners;\n\n    if (!innerGroups) {\n      return selectableTargets.filter(function (_, i) {\n        if (!selectableInners[i]) {\n          return false;\n        }\n\n        return isHit(selectablePoints[i], selectableTargets[i]);\n      });\n    }\n\n    var selectedTargets = [];\n    var minX = Math.floor(left / innerWidth);\n    var maxX = Math.floor(right / innerWidth);\n    var minY = Math.floor(top / innerHeight);\n    var maxY = Math.floor(bottom / innerHeight);\n\n    for (var x = minX; x <= maxX; ++x) {\n      var yGroups = innerGroups[x];\n\n      if (!yGroups) {\n        continue;\n      }\n\n      for (var y = minY; y <= maxY; ++y) {\n        var group = yGroups[y];\n\n        if (!group) {\n          continue;\n        }\n\n        group.forEach(function (index) {\n          var points = selectablePoints[index];\n          var inner = selectableInners[index];\n          var target = selectableTargets[index];\n\n          if (inner && isHit(points, target)) {\n            selectedTargets.push(target);\n          }\n        });\n      }\n    }\n\n    return filterDuplicated(selectedTargets);\n  };\n\n  __proto.initDragScroll = function () {\n    var _this = this;\n\n    this.dragScroll.on(\"scrollDrag\", function (_a) {\n      var next = _a.next;\n      next(_this.gesto.getCurrentEvent());\n    }).on(\"scroll\", function (_a) {\n      var container = _a.container,\n          direction = _a.direction;\n\n      var innerScrollOptions = _this.gesto.getEventData().innerScrollOptions;\n\n      if (innerScrollOptions) {\n        _this.emit(\"innerScroll\", {\n          container: container,\n          direction: direction\n        });\n      } else {\n        _this.emit(\"scroll\", {\n          container: container,\n          direction: direction\n        });\n      }\n    }).on(\"move\", function (_a) {\n      var offsetX = _a.offsetX,\n          offsetY = _a.offsetY,\n          inputEvent = _a.inputEvent;\n      var gesto = _this.gesto;\n\n      if (!gesto || !gesto.isFlag()) {\n        return;\n      }\n\n      var data = _this.gesto.getEventData();\n\n      var boundArea = data.boundArea;\n      data.startX -= offsetX;\n      data.startY -= offsetY;\n\n      var innerScrollOptions = _this.gesto.getEventData().innerScrollOptions;\n\n      var container = innerScrollOptions === null || innerScrollOptions === void 0 ? void 0 : innerScrollOptions.container;\n      var isMoveInnerScroll = false;\n\n      if (container) {\n        var parentMap_2 = data.selectableInnerScrollParentMap;\n        var parentInfo = parentMap_2.get(container);\n\n        if (parentInfo) {\n          parentInfo.paths.forEach(function (scrollContainer) {\n            var containerInfo = parentMap_2.get(scrollContainer);\n            containerInfo.points.forEach(function (pos) {\n              pos[0] -= offsetX;\n              pos[1] -= offsetY;\n            });\n          });\n          parentInfo.indexes.forEach(function (index) {\n            data.selectablePoints[index].forEach(function (pos) {\n              pos[0] -= offsetX;\n              pos[1] -= offsetY;\n            });\n          });\n          isMoveInnerScroll = true;\n        }\n      }\n\n      if (!isMoveInnerScroll) {\n        data.selectablePoints.forEach(function (points) {\n          points.forEach(function (pos) {\n            pos[0] -= offsetX;\n            pos[1] -= offsetY;\n          });\n        });\n      }\n\n      _this._refreshGroups(data);\n\n      boundArea.left -= offsetX;\n      boundArea.right -= offsetX;\n      boundArea.top -= offsetY;\n      boundArea.bottom -= offsetY;\n\n      _this.gesto.scrollBy(offsetX, offsetY, inputEvent.inputEvent);\n\n      _this._checkSelected(_this.gesto.getCurrentEvent());\n    });\n  };\n\n  __proto._select = function (selectedTargets, rect, e, isStart, isDragStartEnd) {\n    if (isDragStartEnd === void 0) {\n      isDragStartEnd = false;\n    }\n\n    var inputEvent = e.inputEvent;\n    var data = e.data;\n    var result = this.setSelectedTargets(selectedTargets);\n\n    var _a = (0,_egjs_children_differ__WEBPACK_IMPORTED_MODULE_1__.diff)(data.startSelectedTargets, selectedTargets),\n        added = _a.added,\n        removed = _a.removed,\n        prevList = _a.prevList,\n        list = _a.list;\n\n    var startResult = {\n      startSelected: prevList,\n      startAdded: added.map(function (i) {\n        return list[i];\n      }),\n      startRemoved: removed.map(function (i) {\n        return prevList[i];\n      })\n    };\n\n    if (isStart) {\n      /**\n       * When the select(drag) starts, the selectStart event is called.\n       * @memberof Selecto\n       * @event selectStart\n       * @param {Selecto.OnSelect} - Parameters for the selectStart event\n       * @example\n       * import Selecto from \"selecto\";\n       *\n       * const selecto = new Selecto({\n       *   container: document.body,\n       *   selectByClick: true,\n       *   selectFromInside: false,\n       * });\n       *\n       * selecto.on(\"selectStart\", e => {\n       *   e.added.forEach(el => {\n       *     el.classList.add(\"selected\");\n       *   });\n       *   e.removed.forEach(el => {\n       *     el.classList.remove(\"selected\");\n       *   });\n       * }).on(\"selectEnd\", e => {\n       *   e.afterAdded.forEach(el => {\n       *     el.classList.add(\"selected\");\n       *   });\n       *   e.afterRemoved.forEach(el => {\n       *     el.classList.remove(\"selected\");\n       *   });\n       * });\n       */\n      this.emit(\"selectStart\", __assign(__assign(__assign({}, result), startResult), {\n        rect: rect,\n        inputEvent: inputEvent,\n        data: data.data,\n        isTrusted: e.isTrusted,\n        isDragStartEnd: isDragStartEnd\n      }));\n    }\n\n    if (result.added.length || result.removed.length) {\n      /**\n       * When the select in real time, the select event is called.\n       * @memberof Selecto\n       * @event select\n       * @param {Selecto.OnSelect} - Parameters for the select event\n       * @example\n       * import Selecto from \"selecto\";\n       *\n       * const selecto = new Selecto({\n       *   container: document.body,\n       *   selectByClick: true,\n       *   selectFromInside: false,\n       * });\n       *\n       * selecto.on(\"select\", e => {\n       *   e.added.forEach(el => {\n       *     el.classList.add(\"selected\");\n       *   });\n       *   e.removed.forEach(el => {\n       *     el.classList.remove(\"selected\");\n       *   });\n       * });\n       */\n      this.emit(\"select\", __assign(__assign(__assign({}, result), startResult), {\n        rect: rect,\n        inputEvent: inputEvent,\n        data: data.data,\n        isTrusted: e.isTrusted,\n        isDragStartEnd: isDragStartEnd\n      }));\n    }\n  };\n\n  __proto._selectEnd = function (startSelectedTargets, startPassedTargets, rect, e, isDragStartEnd) {\n    if (isDragStartEnd === void 0) {\n      isDragStartEnd = false;\n    }\n\n    var inputEvent = e.inputEvent,\n        isDouble = e.isDouble,\n        data = e.data;\n    var type = inputEvent && inputEvent.type;\n    var isDragStart = type === \"mousedown\" || type === \"touchstart\";\n\n    var _a = (0,_egjs_children_differ__WEBPACK_IMPORTED_MODULE_1__.diff)(startSelectedTargets, this.selectedTargets),\n        added = _a.added,\n        removed = _a.removed,\n        prevList = _a.prevList,\n        list = _a.list;\n\n    var _b = (0,_egjs_children_differ__WEBPACK_IMPORTED_MODULE_1__.diff)(startPassedTargets, this.selectedTargets),\n        afterAdded = _b.added,\n        afterRemoved = _b.removed,\n        afterPrevList = _b.prevList,\n        afterList = _b.list;\n    /**\n     * When the select(dragEnd or click) ends, the selectEnd event is called.\n     * @memberof Selecto\n     * @event selectEnd\n     * @param {Selecto.OnSelectEnd} - Parameters for the selectEnd event\n     * @example\n     * import Selecto from \"selecto\";\n     *\n     * const selecto = new Selecto({\n     *   container: document.body,\n     *   selectByClick: true,\n     *   selectFromInside: false,\n     * });\n     *\n     * selecto.on(\"selectStart\", e => {\n     *   e.added.forEach(el => {\n     *     el.classList.add(\"selected\");\n     *   });\n     *   e.removed.forEach(el => {\n     *     el.classList.remove(\"selected\");\n     *   });\n     * }).on(\"selectEnd\", e => {\n     *   e.afterAdded.forEach(el => {\n     *     el.classList.add(\"selected\");\n     *   });\n     *   e.afterRemoved.forEach(el => {\n     *     el.classList.remove(\"selected\");\n     *   });\n     * });\n     */\n\n\n    this.emit(\"selectEnd\", {\n      startSelected: startSelectedTargets,\n      beforeSelected: startPassedTargets,\n      selected: this.selectedTargets,\n      added: added.map(function (index) {\n        return list[index];\n      }),\n      removed: removed.map(function (index) {\n        return prevList[index];\n      }),\n      afterAdded: afterAdded.map(function (index) {\n        return afterList[index];\n      }),\n      afterRemoved: afterRemoved.map(function (index) {\n        return afterPrevList[index];\n      }),\n      isDragStart: isDragStart && isDragStartEnd,\n      isDragStartEnd: isDragStart && isDragStartEnd,\n      isClick: !!e.isClick,\n      isDouble: !!isDouble,\n      rect: rect,\n      inputEvent: inputEvent,\n      data: data.data,\n      isTrusted: e.isTrusted\n    });\n  };\n\n  __proto._checkSelected = function (e, rect) {\n    if (rect === void 0) {\n      rect = getRect(e, this.options.ratio);\n    }\n\n    var data = e.data;\n    var top = rect.top,\n        left = rect.left,\n        width = rect.width,\n        height = rect.height;\n    var selectFlag = data.selectFlag;\n    var containerX = data.containerX,\n        containerY = data.containerY,\n        scaleMatrix = data.scaleMatrix;\n    var offsetPos = (0,css_to_mat__WEBPACK_IMPORTED_MODULE_4__.calculateMatrixDist)(scaleMatrix, [left - containerX, top - containerY]);\n    var offsetSize = (0,css_to_mat__WEBPACK_IMPORTED_MODULE_4__.calculateMatrixDist)(scaleMatrix, [width, height]);\n    var selectedTargets = [];\n\n    if (selectFlag) {\n      this.target.style.cssText += \"display: block;\" + \"left:0px;top:0px;\" + \"transform: translate(\".concat(offsetPos[0], \"px, \").concat(offsetPos[1], \"px);\") + \"width:\".concat(offsetSize[0], \"px;height:\").concat(offsetSize[1], \"px;\");\n      var passedTargets = this.hitTest(rect, data, true, e);\n      selectedTargets = passTargets(data.startPassedTargets, passedTargets, this.continueSelect && this.continueSelectWithoutDeselect);\n    }\n    /**\n     * When the drag, the drag event is called.\n     * Call the stop () function if you have a specific element or don't want to raise a select\n     * @memberof Selecto\n     * @event drag\n     * @param {OnDrag} - Parameters for the drag event\n     * @example\n     * import Selecto from \"selecto\";\n     *\n     * const selecto = new Selecto({\n     *   container: document.body,\n     *   selectByClick: true,\n     *   selectFromInside: false,\n     * });\n     *\n     * selecto.on(\"drag\", e => {\n     *   e.stop();\n     * }).on(\"select\", e => {\n     *   e.added.forEach(el => {\n     *     el.classList.add(\"selected\");\n     *   });\n     *   e.removed.forEach(el => {\n     *     el.classList.remove(\"selected\");\n     *   });\n     * });\n     */\n\n\n    var result = this.emit(\"drag\", __assign(__assign({}, e), {\n      data: data.data,\n      isSelect: selectFlag,\n      rect: rect\n    }));\n\n    if (result === false) {\n      this.target.style.cssText += \"display: none;\";\n      e.stop();\n      return;\n    }\n\n    if (selectFlag) {\n      this._select(selectedTargets, rect, e);\n    }\n  };\n\n  __proto._sameCombiKey = function (e, keys, isKeyup) {\n    if (!keys) {\n      return false;\n    }\n\n    var combi = (0,keycon__WEBPACK_IMPORTED_MODULE_6__.getCombi)(e.inputEvent, e.key);\n    var nextKeys = [].concat(keys);\n    var toggleKeys = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.isArray)(nextKeys[0]) ? nextKeys : [nextKeys];\n\n    if (isKeyup) {\n      var singleKey_1 = e.key;\n      return toggleKeys.some(function (keys) {\n        return keys.some(function (key) {\n          return key === singleKey_1;\n        });\n      });\n    }\n\n    return toggleKeys.some(function (keys) {\n      return keys.every(function (key) {\n        return combi.indexOf(key) > -1;\n      });\n    });\n  };\n\n  __proto._findElement = function (clickedTarget, selectableTargets) {\n    var pointTarget = clickedTarget;\n\n    while (pointTarget) {\n      if (selectableTargets.indexOf(pointTarget) > -1) {\n        break;\n      }\n\n      pointTarget = pointTarget.parentElement;\n    }\n\n    return pointTarget;\n  };\n\n  __proto._refreshGroups = function (data) {\n    var _a;\n\n    var innerWidth = data.innerWidth;\n    var innerHeight = data.innerHeight;\n    var selectablePoints = data.selectablePoints;\n\n    if (this.options.checkOverflow) {\n      var innerScrollContainer_1 = (_a = this.gesto.getEventData().innerScrollOptions) === null || _a === void 0 ? void 0 : _a.container;\n      var parentMap_3 = data.selectableInnerScrollParentMap;\n      var innerScrollPathsList = data.selectableInnerScrollPathsList;\n      data.selectableInners = innerScrollPathsList.map(function (innerScrollPaths, i) {\n        var isAlwaysTrue = false;\n        return innerScrollPaths.every(function (target) {\n          if (isAlwaysTrue) {\n            return true;\n          }\n\n          if (target === innerScrollContainer_1) {\n            isAlwaysTrue = true;\n            return true;\n          }\n\n          var rect = parentMap_3.get(target);\n\n          if (rect) {\n            var points1 = selectablePoints[i];\n            var points2 = rect.points;\n            var overlapPoints = (0,overlap_area__WEBPACK_IMPORTED_MODULE_5__.getOverlapPoints)(points1, points2);\n\n            if (!overlapPoints.length) {\n              return false;\n            }\n          }\n\n          return true;\n        });\n      });\n    }\n\n    if (!innerWidth || !innerHeight) {\n      data.innerGroups = null;\n    } else {\n      var selectablePoints_1 = data.selectablePoints;\n      var groups_1 = {};\n      selectablePoints_1.forEach(function (points, i) {\n        var minX = Infinity;\n        var maxX = -Infinity;\n        var minY = Infinity;\n        var maxY = -Infinity;\n        points.forEach(function (pos) {\n          var x = Math.floor(pos[0] / innerWidth);\n          var y = Math.floor(pos[1] / innerHeight);\n          minX = Math.min(x, minX);\n          maxX = Math.max(x, maxX);\n          minY = Math.min(y, minY);\n          maxY = Math.max(y, maxY);\n        });\n\n        for (var x = minX; x <= maxX; ++x) {\n          for (var y = minY; y <= maxY; ++y) {\n            groups_1[x] = groups_1[x] || {};\n            groups_1[x][y] = groups_1[x][y] || [];\n            groups_1[x][y].push(i);\n          }\n        }\n      });\n      data.innerGroups = groups_1;\n    }\n  };\n\n  Selecto = __decorate([(0,framework_utils__WEBPACK_IMPORTED_MODULE_8__.Properties)(PROPERTIES, function (prototype, property) {\n    var attributes = {\n      enumerable: true,\n      configurable: true,\n      get: function () {\n        return this.options[property];\n      }\n    };\n    var getter = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.camelize)(\"get \".concat(property));\n\n    if (prototype[getter]) {\n      attributes.get = function () {\n        return this[getter]();\n      };\n    } else {\n      attributes.get = function () {\n        return this.options[property];\n      };\n    }\n\n    var setter = (0,_daybrush_utils__WEBPACK_IMPORTED_MODULE_0__.camelize)(\"set \".concat(property));\n\n    if (prototype[setter]) {\n      attributes.set = function (value) {\n        this[setter](value);\n      };\n    } else {\n      attributes.set = function (value) {\n        this.options[property] = value;\n      };\n    }\n\n    Object.defineProperty(prototype, property, attributes);\n  })], Selecto);\n  return Selecto;\n}(_scena_event_emitter__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n\nvar Selecto$1 =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(Selecto, _super);\n\n  function Selecto() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return Selecto;\n}(Selecto);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Selecto$1);\n\n//# sourceMappingURL=selecto.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/selecto/dist/selecto.esm.js\n");

/***/ })

};
;